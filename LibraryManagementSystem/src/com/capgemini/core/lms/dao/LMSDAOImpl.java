package com.capgemini.core.lms.dao;

import java.util.*;
import java.util.List;
import java.util.Map;

import com.capgemini.core.lms.Exceptions.LMSExceptions;
import com.capgemini.core.lms.bean.Book;

public class LMSDAOImpl implements LMSDAO
{
	Map<Integer,Book>books=new HashMap<>();
	
	private int bookIdValue=1000;
	
	public int generateBookId()
	{
		return ++bookIdValue;
	}
	
	//returns any value between 1 and 10000
	public int generateBookIdRND()
	{
		double rndDouble = Math.random();
		return (int)rndDouble*10000;
	}
	
	@Override
	public int addBook(Book book) throws LMSExceptions 
	{
		//set book id generated by method
		book.setId(generateBookId());
		
		//add book object as value and its id as key
		books.put(book.getId(),book);
		
		//return books generated id
		return book.getId();
	}

	@Override
	public Book getBook(int bookId) throws LMSExceptions
	{
		Book book= books.get(bookId);
		
		if(book==null)
			throw new LMSExceptions("Book not found with id"+bookId);
	
		return book;
	}

	@Override
	public void updateBook(Book book) throws LMSExceptions
	{
		
		// check whether bookid exists or not in map
		if(books.containsKey(book.getId())==false)
			throw new LMSExceptions("No book exists with this book id, hence update failed");

		//updates if key exists else adds to map
		books.put(book.getId(),book);
	}

	@Override
	public Book removeBook(int bookId) throws LMSExceptions 
	{
		Book book = books.remove(bookId);
		
		if(book==null)
			throw new LMSExceptions("Remove failed as NO Book found with id"+bookId);
		
		return null;
	}

	@Override
	public List<Book> getBooks() throws LMSExceptions 
	{
		//return (List<Book>) books.values();
		return new ArrayList<Book>(books.values());
	}

}
